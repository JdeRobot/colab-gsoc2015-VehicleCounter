// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `ardroneextra.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package jderobot;

public interface ArDroneExtraPrx extends Ice.ObjectPrx
{
    public void toggleCam();

    public void toggleCam(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_toggleCam();

    public Ice.AsyncResult begin_toggleCam(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_toggleCam(Ice.Callback __cb);

    public Ice.AsyncResult begin_toggleCam(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_toggleCam(Callback_ArDroneExtra_toggleCam __cb);

    public Ice.AsyncResult begin_toggleCam(java.util.Map<String, String> __ctx, Callback_ArDroneExtra_toggleCam __cb);

    public void end_toggleCam(Ice.AsyncResult __result);

    public void land();

    public void land(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_land();

    public Ice.AsyncResult begin_land(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_land(Ice.Callback __cb);

    public Ice.AsyncResult begin_land(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_land(Callback_ArDroneExtra_land __cb);

    public Ice.AsyncResult begin_land(java.util.Map<String, String> __ctx, Callback_ArDroneExtra_land __cb);

    public void end_land(Ice.AsyncResult __result);

    public void takeoff();

    public void takeoff(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_takeoff();

    public Ice.AsyncResult begin_takeoff(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_takeoff(Ice.Callback __cb);

    public Ice.AsyncResult begin_takeoff(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_takeoff(Callback_ArDroneExtra_takeoff __cb);

    public Ice.AsyncResult begin_takeoff(java.util.Map<String, String> __ctx, Callback_ArDroneExtra_takeoff __cb);

    public void end_takeoff(Ice.AsyncResult __result);

    public void reset();

    public void reset(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_reset();

    public Ice.AsyncResult begin_reset(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_reset(Ice.Callback __cb);

    public Ice.AsyncResult begin_reset(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_reset(Callback_ArDroneExtra_reset __cb);

    public Ice.AsyncResult begin_reset(java.util.Map<String, String> __ctx, Callback_ArDroneExtra_reset __cb);

    public void end_reset(Ice.AsyncResult __result);

    public void recordOnUsb(boolean record);

    public void recordOnUsb(boolean record, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_recordOnUsb(boolean record);

    public Ice.AsyncResult begin_recordOnUsb(boolean record, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_recordOnUsb(boolean record, Ice.Callback __cb);

    public Ice.AsyncResult begin_recordOnUsb(boolean record, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_recordOnUsb(boolean record, Callback_ArDroneExtra_recordOnUsb __cb);

    public Ice.AsyncResult begin_recordOnUsb(boolean record, java.util.Map<String, String> __ctx, Callback_ArDroneExtra_recordOnUsb __cb);

    public void end_recordOnUsb(Ice.AsyncResult __result);

    public void ledAnimation(int type, float duration, float req);

    public void ledAnimation(int type, float duration, float req, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_ledAnimation(int type, float duration, float req);

    public Ice.AsyncResult begin_ledAnimation(int type, float duration, float req, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_ledAnimation(int type, float duration, float req, Ice.Callback __cb);

    public Ice.AsyncResult begin_ledAnimation(int type, float duration, float req, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_ledAnimation(int type, float duration, float req, Callback_ArDroneExtra_ledAnimation __cb);

    public Ice.AsyncResult begin_ledAnimation(int type, float duration, float req, java.util.Map<String, String> __ctx, Callback_ArDroneExtra_ledAnimation __cb);

    public void end_ledAnimation(Ice.AsyncResult __result);

    public void flightAnimation(int type, float duration);

    public void flightAnimation(int type, float duration, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_flightAnimation(int type, float duration);

    public Ice.AsyncResult begin_flightAnimation(int type, float duration, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_flightAnimation(int type, float duration, Ice.Callback __cb);

    public Ice.AsyncResult begin_flightAnimation(int type, float duration, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_flightAnimation(int type, float duration, Callback_ArDroneExtra_flightAnimation __cb);

    public Ice.AsyncResult begin_flightAnimation(int type, float duration, java.util.Map<String, String> __ctx, Callback_ArDroneExtra_flightAnimation __cb);

    public void end_flightAnimation(Ice.AsyncResult __result);

    public void flatTrim();

    public void flatTrim(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_flatTrim();

    public Ice.AsyncResult begin_flatTrim(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_flatTrim(Ice.Callback __cb);

    public Ice.AsyncResult begin_flatTrim(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_flatTrim(Callback_ArDroneExtra_flatTrim __cb);

    public Ice.AsyncResult begin_flatTrim(java.util.Map<String, String> __ctx, Callback_ArDroneExtra_flatTrim __cb);

    public void end_flatTrim(Ice.AsyncResult __result);
}
